//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TestGenericWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TestGeneric), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("TestList", TestList);
		L.RegFunction("TestDictionary", TestDictionary);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_List", get_m_List, set_m_List);
		L.RegVar("m_Dic", get_m_Dic, set_m_Dic);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TestList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			TestGeneric obj = (TestGeneric)ToLua.CheckObject<TestGeneric>(L, 1);
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.TestList(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TestDictionary(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			TestGeneric obj = (TestGeneric)ToLua.CheckObject<TestGeneric>(L, 1);
			System.Collections.Generic.Dictionary<int,UnityEngine.GameObject> arg0 = (System.Collections.Generic.Dictionary<int,UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,UnityEngine.GameObject>));
			obj.TestDictionary(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_List(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TestGeneric obj = (TestGeneric)o;
			System.Collections.Generic.List<UnityEngine.GameObject> ret = obj.m_List;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_List on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Dic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TestGeneric obj = (TestGeneric)o;
			System.Collections.Generic.Dictionary<int,UnityEngine.GameObject> ret = obj.m_Dic;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Dic on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_List(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TestGeneric obj = (TestGeneric)o;
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.m_List = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_List on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Dic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TestGeneric obj = (TestGeneric)o;
			System.Collections.Generic.Dictionary<int,UnityEngine.GameObject> arg0 = (System.Collections.Generic.Dictionary<int,UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,UnityEngine.GameObject>));
			obj.m_Dic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Dic on a nil value");
		}
	}
}

